# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
  ## clusters or standalone servers, use a separate plugin instance.
  ##   example: servers = ["tcp://localhost:1883"]
  ##            servers = ["ssl://localhost:1883"]
  ##            servers = ["ws://localhost:1883"]
    servers = ["tcp://mqtt:1883"]
    username = "${DOCKER_MQTT_INIT_USERNAME}"
    password = "${DOCKER_MQTT_INIT_PASSWORD}"

    ## Topics that will be subscribed to.
    topics = [
      "snesors/#"
    ]

# ## Input Consumer parsing
[[inputs.mqtt_consumer.topic_parsing]]
      topic = "sensors/+"
      measurement = "_/measurement"


data_format = "json_v2" # invokes the parser -- lines following are parser config
[[inputs.mqtt_consumer.json_v2]]
    [[inputs.mqtt_consumer.json_v2.tag]]
        path = "name" # GJSON path: JSON is flat -- all keys at root
    [[inputs.mqtt_consumer.json_v2.tag]]
        path = "type" # GJSON path: JSON is flat -- all keys at root
    [[inputs.mqtt_consumer.json_v2.field]]
        path = "tmp"
        rename = "temperature"
        type = "float"
    [[inputs.mqtt_consumer.json_v2.field]]
        path = "humi"
        rename = "humidity"
        type = "float"

# store it in influx
[[outputs.influxdb_v2]]	
    urls = ["http://influxdb:8086"]
    token = "${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}"
    organization = "${DOCKER_INFLUXDB_INIT_ORG}"
    bucket = "${DOCKER_INFLUXDB_INIT_BUCKET}"